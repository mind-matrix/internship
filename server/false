Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;