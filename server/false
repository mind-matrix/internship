Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "phone" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" LIMIT 1;Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "phone" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "phone" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): SELECT 1+1 AS resultExecuting (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "contact" UUID REFERENCES "Contact" ("id"), "address" UUID REFERENCES "Address" ("id"), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "contact" UUID REFERENCES "Contact" ("id"), "address" UUID REFERENCES "Address" ("id"), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "contact", "address", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "contact" UUID REFERENCES "Contact" ("id"), "address" UUID REFERENCES "Address" ("id"), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "contact", "address", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "contact", "address", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TYPE "public"."enum_Businesses_category" AS ENUM('Lab', 'Medicine', 'Both');Executing (default): WITH ranges AS (  SELECT pg_range.rngtypid, pg_type.typname AS rngtypname,         pg_type.typarray AS rngtyparray, pg_range.rngsubtype    FROM pg_range LEFT OUTER JOIN pg_type ON pg_type.oid = pg_range.rngtypid)SELECT pg_type.typname, pg_type.typtype, pg_type.oid, pg_type.typarray,       ranges.rngtypname, ranges.rngtypid, ranges.rngtyparray  FROM pg_type LEFT OUTER JOIN ranges ON pg_type.oid = ranges.rngsubtype WHERE (pg_type.typtype IN('b', 'e'));Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "contact" UUID REFERENCES "Contact" ("id"), "address" UUID REFERENCES "Address" ("id"), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE UNIQUE INDEX "businesses_phone" ON "Businesses" ("phone")Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "phone" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "phone", "email", "altPhone", "createdAt", "updatedAt", "BusinessId" FROM "Contacts" AS "Contact" WHERE "Contact"."BusinessId" = '7e6ae088-57bb-4420-b6c0-851152db88b6' LIMIT 1;Executing (default): SELECT "id", "latitude", "longitude", "line1", "line2", "city", "state", "PIN", "landmark", "deliveryRadius", "createdAt", "updatedAt", "BusinessId" FROM "Addresses" AS "Address" WHERE "Address"."BusinessId" = '7e6ae088-57bb-4420-b6c0-851152db88b6' LIMIT 1;Executing (default): SELECT "id", "originalname", "filename", "mimetype", "encoding", "size", "createdAt", "updatedAt", "BusinessId" FROM "Documents" AS "Document" WHERE "Document"."BusinessId" = '7e6ae088-57bb-4420-b6c0-851152db88b6';Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): UPDATE "Contacts" SET "id"=$1,"BusinessId"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): UPDATE "Addresses" SET "id"=$1,"BusinessId"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "phone", "email", "altPhone", "createdAt", "updatedAt", "BusinessId" FROM "Contacts" AS "Contact" WHERE "Contact"."BusinessId" = 'f7f8220d-f201-408b-b797-beb595a5e993' LIMIT 1;Executing (default): SELECT "id", "latitude", "longitude", "line1", "line2", "city", "state", "PIN", "landmark", "deliveryRadius", "createdAt", "updatedAt", "BusinessId" FROM "Addresses" AS "Address" WHERE "Address"."BusinessId" = 'f7f8220d-f201-408b-b797-beb595a5e993' LIMIT 1;Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): UPDATE "Contacts" SET "id"=$1,"BusinessId"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): UPDATE "Addresses" SET "id"=$1,"BusinessId"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Contacts" ("id","name","phone","email","altPhone","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "id","name","phone","email","altPhone","createdAt","updatedAt","BusinessId";Executing (default): INSERT INTO "Addresses" ("id","latitude","longitude","line1","line2","city","state","PIN","landmark","deliveryRadius","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12) RETURNING "id","latitude","longitude","line1","line2","city","state","PIN","landmark","deliveryRadius","createdAt","updatedAt","BusinessId";Executing (default): SELECT "id", "name", "phone", "email", "altPhone", "createdAt", "updatedAt", "BusinessId" FROM "Contacts" AS "Contact" WHERE "Contact"."BusinessId" = '8db2eb8e-07c8-4a4d-975d-06e6a940b656' LIMIT 1;Executing (default): SELECT "id", "latitude", "longitude", "line1", "line2", "city", "state", "PIN", "landmark", "deliveryRadius", "createdAt", "updatedAt", "BusinessId" FROM "Addresses" AS "Address" WHERE "Address"."BusinessId" = '8db2eb8e-07c8-4a4d-975d-06e6a940b656' LIMIT 1;Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): UPDATE "Contacts" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): UPDATE "Addresses" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Businesses" ("id","phone","verified","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5) RETURNING "id","phone","verified","name","brand","category","createdAt","updatedAt";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): UPDATE "Businesses" SET "verified"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "Contacts" ("id","name","phone","email","altPhone","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "id","name","phone","email","altPhone","createdAt","updatedAt","BusinessId";Executing (default): INSERT INTO "Addresses" ("id","latitude","longitude","line1","line2","city","state","PIN","landmark","deliveryRadius","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12) RETURNING "id","latitude","longitude","line1","line2","city","state","PIN","landmark","deliveryRadius","createdAt","updatedAt","BusinessId";Executing (default): INSERT INTO "Documents" ("id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt","BusinessId";Executing (default): INSERT INTO "Documents" ("id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt","BusinessId";Executing (default): INSERT INTO "Documents" ("id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt","BusinessId";Executing (default): INSERT INTO "Documents" ("id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "id","originalname","filename","mimetype","encoding","size","createdAt","updatedAt","BusinessId";Executing (default): SELECT "id", "name", "phone", "email", "altPhone", "createdAt", "updatedAt", "BusinessId" FROM "Contacts" AS "Contact" WHERE "Contact"."BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66' LIMIT 1;Executing (default): SELECT "id", "latitude", "longitude", "line1", "line2", "city", "state", "PIN", "landmark", "deliveryRadius", "createdAt", "updatedAt", "BusinessId" FROM "Addresses" AS "Address" WHERE "Address"."BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66' LIMIT 1;Executing (default): SELECT "id", "originalname", "filename", "mimetype", "encoding", "size", "createdAt", "updatedAt", "BusinessId" FROM "Documents" AS "Document" WHERE "Document"."BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66';Executing (default): UPDATE "Businesses" SET "name"=$1,"brand"=$2,"updatedAt"=$3 WHERE "id" = $4Executing (default): UPDATE "Contacts" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): UPDATE "Addresses" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): UPDATE "Documents" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" IN ('59740975-d1a1-4a44-98c0-ff91144c42d9', '396967a7-c2fc-44dd-9de2-192cbddfd3fc', '98fad7a3-53cc-409b-a57c-db6c4ace184e', '8abc5c7e-5a1b-4c5b-885e-82e3bc296918')Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessTestId" UUID REFERENCES "BusinessTests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "name" VARCHAR(255) NOT NULL, "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "BusinessTests" ("id","price","createdAt","updatedAt","TestId") VALUES ($1,$2,$3,$4,$5) RETURNING "id","price","createdAt","updatedAt","TestId","BusinessId";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "BusinessTests" ("id","price","createdAt","updatedAt","TestId") VALUES ($1,$2,$3,$4,$5) RETURNING "id","price","createdAt","updatedAt","TestId","BusinessId";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "BusinessTests" ("id","price","createdAt","updatedAt","TestId") VALUES ($1,$2,$3,$4,$5) RETURNING "id","price","createdAt","updatedAt","TestId","BusinessId";Executing (default): UPDATE "BusinessTests" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" IN ('f268efb3-f3db-4664-8fef-083bd7faa5a8')Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "BusinessTests" ("id","price","createdAt","updatedAt","TestId") VALUES ($1,$2,$3,$4,$5) RETURNING "id","price","createdAt","updatedAt","TestId","BusinessId";Executing (default): UPDATE "BusinessTests" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" IN ('024977e0-f0bf-462f-805e-afa8c6b651b0')Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "BusinessTests" ("id","price","createdAt","updatedAt","TestId") VALUES ($1,$2,$3,$4,$5) RETURNING "id","price","createdAt","updatedAt","TestId","BusinessId";Executing (default): UPDATE "BusinessTests" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" IN ('8c4f9939-a8ad-4dd4-90f8-e1f38f0db7d0')Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE UNIQUE INDEX "business_tests__business_id__test_id" ON "BusinessTests" ("BusinessId", "TestId")Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "BusinessTests" ("id","price","createdAt","updatedAt","TestId") VALUES ($1,$2,$3,$4,$5) RETURNING "id","price","createdAt","updatedAt","TestId","BusinessId";Executing (default): UPDATE "BusinessTests" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" IN ('c1a36ec2-57f7-4042-aab9-036a5d052a44')Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "price", "createdAt", "updatedAt", "TestId", "BusinessId" FROM "BusinessTests" AS "BusinessTest" WHERE "BusinessTest"."TestId" = 'f268efb3-f3db-4664-8fef-083bd7faa5a8' AND "BusinessTest"."BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66' LIMIT 1;Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "price", "createdAt", "updatedAt", "TestId", "BusinessId" FROM "BusinessTests" AS "BusinessTest" WHERE "BusinessTest"."id" = 'f268efb3-f3db-4664-8fef-083bd7faa5a8' AND "BusinessTest"."BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66';Executing (default): UPDATE "BusinessTests" SET "price"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "price", "createdAt", "updatedAt", "TestId", "BusinessId" FROM "BusinessTests" AS "BusinessTest" WHERE "BusinessTest"."id" = '8c4f9939-a8ad-4dd4-90f8-e1f38f0db7d0' AND "BusinessTest"."BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66';Executing (default): UPDATE "BusinessTests" SET "price"=$1,"updatedAt"=$2 WHERE "id" = $3Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT 1+1 AS resultExecuting (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Businesses_category' GROUP BY 1Executing (default): CREATE TABLE IF NOT EXISTS "Businesses" ("id" UUID , "phone" VARCHAR(255) NOT NULL UNIQUE, "verified" BOOLEAN DEFAULT false, "name" VARCHAR(255), "brand" VARCHAR(255), "category" "public"."enum_Businesses_category", "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Businesses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Contacts" ("id" UUID , "name" VARCHAR(255) NOT NULL, "phone" VARCHAR(255) NOT NULL, "email" VARCHAR(255), "altPhone" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Contacts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("id" UUID , "latitude" FLOAT NOT NULL, "longitude" FLOAT NOT NULL, "line1" TEXT NOT NULL, "line2" TEXT, "city" VARCHAR(255), "state" VARCHAR(255), "PIN" VARCHAR(255), "landmark" TEXT, "deliveryRadius" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Documents" ("id" UUID , "originalname" VARCHAR(255) NOT NULL, "filename" VARCHAR(255) NOT NULL, "mimetype" VARCHAR(255), "encoding" VARCHAR(255), "size" BIGINT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Documents' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "Tests" ("id"  SERIAL , "name" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): CREATE TABLE IF NOT EXISTS "BusinessTests" ("id" UUID , "price" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "TestId" INTEGER REFERENCES "Tests" ("id") ON DELETE SET NULL ON UPDATE CASCADE, "BusinessId" UUID REFERENCES "Businesses" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BusinessTests' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "name", "createdAt", "updatedAt" FROM "Tests" AS "Test";Executing (default): DELETE FROM "BusinessTests" WHERE "id" = '8c4f9939-a8ad-4dd4-90f8-e1f38f0db7d0' AND "BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66'Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): DELETE FROM "BusinessTests" WHERE "id" = '024977e0-f0bf-462f-805e-afa8c6b651b0' AND "BusinessId" = '87cc723e-e38d-40f4-b36d-a1be267afb66'Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';Executing (default): SELECT "id", "phone", "verified", "name", "brand", "category", "createdAt", "updatedAt" FROM "Businesses" AS "Business" WHERE "Business"."phone" = '9774817655';Executing (default): INSERT INTO "BusinessTests" ("id","price","createdAt","updatedAt","TestId") VALUES ($1,$2,$3,$4,$5) RETURNING "id","price","createdAt","updatedAt","TestId","BusinessId";Executing (default): UPDATE "BusinessTests" SET "BusinessId"=$1,"updatedAt"=$2 WHERE "id" IN ('cc2874a4-cd81-4932-8680-0d35f15e77c2')Executing (default): SELECT "Business"."id", "Business"."phone", "Business"."verified", "Business"."name", "Business"."brand", "Business"."category", "Business"."createdAt", "Business"."updatedAt", "Contact"."id" AS "Contact.id", "Contact"."name" AS "Contact.name", "Contact"."phone" AS "Contact.phone", "Contact"."email" AS "Contact.email", "Contact"."altPhone" AS "Contact.altPhone", "Contact"."createdAt" AS "Contact.createdAt", "Contact"."updatedAt" AS "Contact.updatedAt", "Contact"."BusinessId" AS "Contact.BusinessId", "Address"."id" AS "Address.id", "Address"."latitude" AS "Address.latitude", "Address"."longitude" AS "Address.longitude", "Address"."line1" AS "Address.line1", "Address"."line2" AS "Address.line2", "Address"."city" AS "Address.city", "Address"."state" AS "Address.state", "Address"."PIN" AS "Address.PIN", "Address"."landmark" AS "Address.landmark", "Address"."deliveryRadius" AS "Address.deliveryRadius", "Address"."createdAt" AS "Address.createdAt", "Address"."updatedAt" AS "Address.updatedAt", "Address"."BusinessId" AS "Address.BusinessId", "documents"."id" AS "documents.id", "documents"."originalname" AS "documents.originalname", "documents"."filename" AS "documents.filename", "documents"."mimetype" AS "documents.mimetype", "documents"."encoding" AS "documents.encoding", "documents"."size" AS "documents.size", "documents"."createdAt" AS "documents.createdAt", "documents"."updatedAt" AS "documents.updatedAt", "documents"."BusinessId" AS "documents.BusinessId", "tests"."id" AS "tests.id", "tests"."price" AS "tests.price", "tests"."createdAt" AS "tests.createdAt", "tests"."updatedAt" AS "tests.updatedAt", "tests"."TestId" AS "tests.TestId", "tests"."BusinessId" AS "tests.BusinessId", "tests->Test"."id" AS "tests.Test.id", "tests->Test"."name" AS "tests.Test.name", "tests->Test"."createdAt" AS "tests.Test.createdAt", "tests->Test"."updatedAt" AS "tests.Test.updatedAt" FROM "Businesses" AS "Business" LEFT OUTER JOIN "Contacts" AS "Contact" ON "Business"."id" = "Contact"."BusinessId" LEFT OUTER JOIN "Addresses" AS "Address" ON "Business"."id" = "Address"."BusinessId" LEFT OUTER JOIN "Documents" AS "documents" ON "Business"."id" = "documents"."BusinessId" LEFT OUTER JOIN "BusinessTests" AS "tests" ON "Business"."id" = "tests"."BusinessId" LEFT OUTER JOIN "Tests" AS "tests->Test" ON "tests"."TestId" = "tests->Test"."id" WHERE "Business"."phone" = '9774817655';